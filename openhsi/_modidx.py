# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/openhsi',
                'doc_host': 'https://openhsi.github.io',
                'git_url': 'https://github.com/openhsi/openhsi',
                'lib_path': 'openhsi'},
  'syms': { 'openhsi.atmos': { 'openhsi.atmos.DataCubeViewer': ('atmos.html#datacubeviewer', 'openhsi/atmos.py'),
                               'openhsi.atmos.DataCubeViewer.__call__': ('atmos.html#datacubeviewer.__call__', 'openhsi/atmos.py'),
                               'openhsi.atmos.DataCubeViewer.__init__': ('atmos.html#datacubeviewer.__init__', 'openhsi/atmos.py'),
                               'openhsi.atmos.DataCubeViewer.setup_callbacks': ( 'atmos.html#datacubeviewer.setup_callbacks',
                                                                                 'openhsi/atmos.py'),
                               'openhsi.atmos.DataCubeViewer.setup_streams': ( 'atmos.html#datacubeviewer.setup_streams',
                                                                               'openhsi/atmos.py'),
                               'openhsi.atmos.ELC': ('atmos.html#elc', 'openhsi/atmos.py'),
                               'openhsi.atmos.ELC.__call__': ('atmos.html#elc.__call__', 'openhsi/atmos.py'),
                               'openhsi.atmos.ELC.__init__': ('atmos.html#elc.__init__', 'openhsi/atmos.py'),
                               'openhsi.atmos.ELC.setup_callbacks': ('atmos.html#elc.setup_callbacks', 'openhsi/atmos.py'),
                               'openhsi.atmos.ELC.setup_export_6SV': ('atmos.html#elc.setup_export_6sv', 'openhsi/atmos.py'),
                               'openhsi.atmos.ELC.setup_export_ELC': ('atmos.html#elc.setup_export_elc', 'openhsi/atmos.py'),
                               'openhsi.atmos.ELC.setup_streams': ('atmos.html#elc.setup_streams', 'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV': ('atmos.html#model6sv', 'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV.__call__': ('atmos.html#model6sv.__call__', 'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV.__init__': ('atmos.html#model6sv.__init__', 'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV._sixs_run_one_wavelength': ( 'atmos.html#model6sv._sixs_run_one_wavelength',
                                                                                    'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV.rad2photons': ('atmos.html#model6sv.rad2photons', 'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV.run_wavelengths': ('atmos.html#model6sv.run_wavelengths', 'openhsi/atmos.py'),
                               'openhsi.atmos.Model6SV.show': ('atmos.html#model6sv.show', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralLibrary': ('atmos.html#spectrallibrary', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralLibrary.__init__': ('atmos.html#spectrallibrary.__init__', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralLibrary.dump': ('atmos.html#spectrallibrary.dump', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralLibrary.import_USGS': ('atmos.html#spectrallibrary.import_usgs', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralLibrary.interp': ('atmos.html#spectrallibrary.interp', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralLibrary.show': ('atmos.html#spectrallibrary.show', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralMatcher': ('atmos.html#spectralmatcher', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralMatcher.__init__': ('atmos.html#spectralmatcher.__init__', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralMatcher.interp': ('atmos.html#spectralmatcher.interp', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralMatcher.show': ('atmos.html#spectralmatcher.show', 'openhsi/atmos.py'),
                               'openhsi.atmos.SpectralMatcher.topk_spectra': ( 'atmos.html#spectralmatcher.topk_spectra',
                                                                               'openhsi/atmos.py'),
                               'openhsi.atmos.remap': ('atmos.html#remap', 'openhsi/atmos.py')},
            'openhsi.calibrate': { 'openhsi.calibrate.SettingsBuilderMetaclass': ( 'calibrate.html#settingsbuildermetaclass',
                                                                                   'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMetaclass.__new__': ( 'calibrate.html#settingsbuildermetaclass.__new__',
                                                                                           'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin': ( 'calibrate.html#settingsbuildermixin',
                                                                               'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.fit_HgAr_lines': ( 'calibrate.html#settingsbuildermixin.fit_hgar_lines',
                                                                                              'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.fit_emission_lines': ( 'calibrate.html#settingsbuildermixin.fit_emission_lines',
                                                                                                  'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.retake_HgAr': ( 'calibrate.html#settingsbuildermixin.retake_hgar',
                                                                                           'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.retake_emission_lines': ( 'calibrate.html#settingsbuildermixin.retake_emission_lines',
                                                                                                     'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.retake_flat_field': ( 'calibrate.html#settingsbuildermixin.retake_flat_field',
                                                                                                 'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_intsphere_cube': ( 'calibrate.html#settingsbuildermixin.update_intsphere_cube',
                                                                                                     'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_intsphere_fit': ( 'calibrate.html#settingsbuildermixin.update_intsphere_fit',
                                                                                                    'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_resolution': ( 'calibrate.html#settingsbuildermixin.update_resolution',
                                                                                                 'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_row_minmax': ( 'calibrate.html#settingsbuildermixin.update_row_minmax',
                                                                                                 'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_smile_shifts': ( 'calibrate.html#settingsbuildermixin.update_smile_shifts',
                                                                                                   'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_window_across_track': ( 'calibrate.html#settingsbuildermixin.update_window_across_track',
                                                                                                          'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SettingsBuilderMixin.update_window_along_track': ( 'calibrate.html#settingsbuildermixin.update_window_along_track',
                                                                                                         'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SpectraPTController': ('calibrate.html#spectraptcontroller', 'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SpectraPTController.__init__': ( 'calibrate.html#spectraptcontroller.__init__',
                                                                                       'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SpectraPTController.client': ( 'calibrate.html#spectraptcontroller.client',
                                                                                     'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SpectraPTController.selectPreset': ( 'calibrate.html#spectraptcontroller.selectpreset',
                                                                                           'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SpectraPTController.turnOffLamp': ( 'calibrate.html#spectraptcontroller.turnofflamp',
                                                                                          'openhsi/calibrate.py'),
                                   'openhsi.calibrate.SpectraPTController.turnOnLamp': ( 'calibrate.html#spectraptcontroller.turnonlamp',
                                                                                         'openhsi/calibrate.py'),
                                   'openhsi.calibrate.create_settings_builder': ( 'calibrate.html#create_settings_builder',
                                                                                  'openhsi/calibrate.py'),
                                   'openhsi.calibrate.sum_gaussians': ('calibrate.html#sum_gaussians', 'openhsi/calibrate.py')},
            'openhsi.cameras': { 'openhsi.cameras.FlirCamera': ('cameras.html#flircamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase': ('cameras.html#flircamerabase', 'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.__close__': ( 'cameras.html#flircamerabase.__close__',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.__init__': ('cameras.html#flircamerabase.__init__', 'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.get_img': ('cameras.html#flircamerabase.get_img', 'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.get_temp': ('cameras.html#flircamerabase.get_temp', 'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.set_exposure': ( 'cameras.html#flircamerabase.set_exposure',
                                                                                  'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.start_cam': ( 'cameras.html#flircamerabase.start_cam',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.FlirCameraBase.stop_cam': ('cameras.html#flircamerabase.stop_cam', 'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCamera': ('cameras.html#lucidcamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase': ('cameras.html#lucidcamerabase', 'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.__exit__': ( 'cameras.html#lucidcamerabase.__exit__',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.__init__': ( 'cameras.html#lucidcamerabase.__init__',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.get_img': ('cameras.html#lucidcamerabase.get_img', 'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.get_mac': ('cameras.html#lucidcamerabase.get_mac', 'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.get_temp': ( 'cameras.html#lucidcamerabase.get_temp',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.set_exposure': ( 'cameras.html#lucidcamerabase.set_exposure',
                                                                                   'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.set_gain': ( 'cameras.html#lucidcamerabase.set_gain',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.start_cam': ( 'cameras.html#lucidcamerabase.start_cam',
                                                                                'openhsi/cameras.py'),
                                 'openhsi.cameras.LucidCameraBase.stop_cam': ( 'cameras.html#lucidcamerabase.stop_cam',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.SharedFlirCamera': ('cameras.html#sharedflircamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.SharedLucidCamera': ('cameras.html#sharedlucidcamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.SharedXimeaCamera': ('cameras.html#sharedximeacamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.WebCamera': ('cameras.html#webcamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.WebCamera.__init__': ('cameras.html#webcamera.__init__', 'openhsi/cameras.py'),
                                 'openhsi.cameras.WebCamera.get_img': ('cameras.html#webcamera.get_img', 'openhsi/cameras.py'),
                                 'openhsi.cameras.WebCamera.get_temp': ('cameras.html#webcamera.get_temp', 'openhsi/cameras.py'),
                                 'openhsi.cameras.WebCamera.start_cam': ('cameras.html#webcamera.start_cam', 'openhsi/cameras.py'),
                                 'openhsi.cameras.WebCamera.stop_cam': ('cameras.html#webcamera.stop_cam', 'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCamera': ('cameras.html#ximeacamera', 'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase': ('cameras.html#ximeacamerabase', 'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.__exit__': ( 'cameras.html#ximeacamerabase.__exit__',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.__init__': ( 'cameras.html#ximeacamerabase.__init__',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.get_img': ('cameras.html#ximeacamerabase.get_img', 'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.get_temp': ( 'cameras.html#ximeacamerabase.get_temp',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.set_exposure': ( 'cameras.html#ximeacamerabase.set_exposure',
                                                                                   'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.start_cam': ( 'cameras.html#ximeacamerabase.start_cam',
                                                                                'openhsi/cameras.py'),
                                 'openhsi.cameras.XimeaCameraBase.stop_cam': ( 'cameras.html#ximeacamerabase.stop_cam',
                                                                               'openhsi/cameras.py'),
                                 'openhsi.cameras.switched_camera': ('cameras.html#switched_camera', 'openhsi/cameras.py')},
            'openhsi.capture': { 'openhsi.capture.OpenHSI': ('capture.html#openhsi', 'openhsi/capture.py'),
                                 'openhsi.capture.OpenHSI.__close__': ('capture.html#openhsi.__close__', 'openhsi/capture.py'),
                                 'openhsi.capture.OpenHSI.__enter__': ('capture.html#openhsi.__enter__', 'openhsi/capture.py'),
                                 'openhsi.capture.OpenHSI.__exit__': ('capture.html#openhsi.__exit__', 'openhsi/capture.py'),
                                 'openhsi.capture.OpenHSI.__init__': ('capture.html#openhsi.__init__', 'openhsi/capture.py'),
                                 'openhsi.capture.OpenHSI.avgNimgs': ('capture.html#openhsi.avgnimgs', 'openhsi/capture.py'),
                                 'openhsi.capture.OpenHSI.collect': ('capture.html#openhsi.collect', 'openhsi/capture.py'),
                                 'openhsi.capture.ProcessDatacube': ('capture.html#processdatacube', 'openhsi/capture.py'),
                                 'openhsi.capture.ProcessDatacube.__init__': ( 'capture.html#processdatacube.__init__',
                                                                               'openhsi/capture.py'),
                                 'openhsi.capture.ProcessDatacube.load_next_tfms': ( 'capture.html#processdatacube.load_next_tfms',
                                                                                     'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube': ('capture.html#processrawdatacube', 'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube.__init__': ( 'capture.html#processrawdatacube.__init__',
                                                                                  'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube.get_img': ( 'capture.html#processrawdatacube.get_img',
                                                                                 'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube.save': ('capture.html#processrawdatacube.save', 'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube.set_exposure': ( 'capture.html#processrawdatacube.set_exposure',
                                                                                      'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube.start_cam': ( 'capture.html#processrawdatacube.start_cam',
                                                                                   'openhsi/capture.py'),
                                 'openhsi.capture.ProcessRawDatacube.stop_cam': ( 'capture.html#processrawdatacube.stop_cam',
                                                                                  'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera': ('capture.html#sharedsimulatedcamera', 'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.__init__': ( 'capture.html#sharedsimulatedcamera.__init__',
                                                                                     'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.gen_flat': ( 'capture.html#sharedsimulatedcamera.gen_flat',
                                                                                     'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.gen_sim_spectra': ( 'capture.html#sharedsimulatedcamera.gen_sim_spectra',
                                                                                            'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.get_img': ( 'capture.html#sharedsimulatedcamera.get_img',
                                                                                    'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.get_temp': ( 'capture.html#sharedsimulatedcamera.get_temp',
                                                                                     'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.rgb2xyz_matching_funcs': ( 'capture.html#sharedsimulatedcamera.rgb2xyz_matching_funcs',
                                                                                                   'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.set_exposure': ( 'capture.html#sharedsimulatedcamera.set_exposure',
                                                                                         'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.start_cam': ( 'capture.html#sharedsimulatedcamera.start_cam',
                                                                                      'openhsi/capture.py'),
                                 'openhsi.capture.SharedSimulatedCamera.stop_cam': ( 'capture.html#sharedsimulatedcamera.stop_cam',
                                                                                     'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera': ('capture.html#simulatedcamera', 'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.__init__': ( 'capture.html#simulatedcamera.__init__',
                                                                               'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.gen_flat': ( 'capture.html#simulatedcamera.gen_flat',
                                                                               'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.gen_sim_spectra': ( 'capture.html#simulatedcamera.gen_sim_spectra',
                                                                                      'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.get_img': ('capture.html#simulatedcamera.get_img', 'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.get_temp': ( 'capture.html#simulatedcamera.get_temp',
                                                                               'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.mode_change': ( 'capture.html#simulatedcamera.mode_change',
                                                                                  'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.rgb2xyz_matching_funcs': ( 'capture.html#simulatedcamera.rgb2xyz_matching_funcs',
                                                                                             'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.set_exposure': ( 'capture.html#simulatedcamera.set_exposure',
                                                                                   'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.start_cam': ( 'capture.html#simulatedcamera.start_cam',
                                                                                'openhsi/capture.py'),
                                 'openhsi.capture.SimulatedCamera.stop_cam': ( 'capture.html#simulatedcamera.stop_cam',
                                                                               'openhsi/capture.py')},
            'openhsi.core': {'openhsi.core.foo': ('core.html#foo', 'openhsi/core.py')},
            'openhsi.data': { 'openhsi.data.Array': ('data.html#array', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties': ('data.html#cameraproperties', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.__enter__': ('data.html#cameraproperties.__enter__', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.__exit__': ('data.html#cameraproperties.__exit__', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.__init__': ('data.html#cameraproperties.__init__', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.__repr__': ('data.html#cameraproperties.__repr__', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.crop': ('data.html#cameraproperties.crop', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.dn2rad': ('data.html#cameraproperties.dn2rad', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.dump': ('data.html#cameraproperties.dump', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.fast_bin': ('data.html#cameraproperties.fast_bin', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.fast_smile': ('data.html#cameraproperties.fast_smile', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.pipeline': ('data.html#cameraproperties.pipeline', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.rad2ref_6SV': ('data.html#cameraproperties.rad2ref_6sv', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.set_processing_lvl': ( 'data.html#cameraproperties.set_processing_lvl',
                                                                                    'openhsi/data.py'),
                              'openhsi.data.CameraProperties.slow_bin': ('data.html#cameraproperties.slow_bin', 'openhsi/data.py'),
                              'openhsi.data.CameraProperties.tfm_setup': ('data.html#cameraproperties.tfm_setup', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer': ('data.html#circarraybuffer', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer.__getitem__': ('data.html#circarraybuffer.__getitem__', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer.__init__': ('data.html#circarraybuffer.__init__', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer._inc': ('data.html#circarraybuffer._inc', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer.get': ('data.html#circarraybuffer.get', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer.is_empty': ('data.html#circarraybuffer.is_empty', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer.put': ('data.html#circarraybuffer.put', 'openhsi/data.py'),
                              'openhsi.data.CircArrayBuffer.show': ('data.html#circarraybuffer.show', 'openhsi/data.py'),
                              'openhsi.data.DataCube': ('data.html#datacube', 'openhsi/data.py'),
                              'openhsi.data.DataCube.__init__': ('data.html#datacube.__init__', 'openhsi/data.py'),
                              'openhsi.data.DataCube.__repr__': ('data.html#datacube.__repr__', 'openhsi/data.py'),
                              'openhsi.data.DataCube.load_nc': ('data.html#datacube.load_nc', 'openhsi/data.py'),
                              'openhsi.data.DataCube.put': ('data.html#datacube.put', 'openhsi/data.py'),
                              'openhsi.data.DataCube.save': ('data.html#datacube.save', 'openhsi/data.py'),
                              'openhsi.data.DataCube.show': ('data.html#datacube.show', 'openhsi/data.py'),
                              'openhsi.data.DateTimeBuffer': ('data.html#datetimebuffer', 'openhsi/data.py'),
                              'openhsi.data.DateTimeBuffer.__getitem__': ('data.html#datetimebuffer.__getitem__', 'openhsi/data.py'),
                              'openhsi.data.DateTimeBuffer.__init__': ('data.html#datetimebuffer.__init__', 'openhsi/data.py'),
                              'openhsi.data.DateTimeBuffer.update': ('data.html#datetimebuffer.update', 'openhsi/data.py')},
            'openhsi.geometry': { 'openhsi.geometry.GeorectifyDatacube': ('geometry.html#georectifydatacube', 'openhsi/geometry.py'),
                                  'openhsi.geometry.GeorectifyDatacube.__init__': ( 'geometry.html#georectifydatacube.__init__',
                                                                                    'openhsi/geometry.py')},
            'openhsi.metadata': { 'openhsi.metadata.MetadataEditor': ('metadata.html#metadataeditor', 'openhsi/metadata.py'),
                                  'openhsi.metadata.MetadataEditor.__call__': ( 'metadata.html#metadataeditor.__call__',
                                                                                'openhsi/metadata.py'),
                                  'openhsi.metadata.MetadataEditor.__init__': ( 'metadata.html#metadataeditor.__init__',
                                                                                'openhsi/metadata.py'),
                                  'openhsi.metadata.MetadataEditor.make_widgets': ( 'metadata.html#metadataeditor.make_widgets',
                                                                                    'openhsi/metadata.py'),
                                  'openhsi.metadata.MetadataEditor.update_export': ( 'metadata.html#metadataeditor.update_export',
                                                                                     'openhsi/metadata.py'),
                                  'openhsi.metadata.MetadataEditor.update_extract': ( 'metadata.html#metadataeditor.update_extract',
                                                                                      'openhsi/metadata.py'),
                                  'openhsi.metadata.MetadataEditor.update_save': ( 'metadata.html#metadataeditor.update_save',
                                                                                   'openhsi/metadata.py'),
                                  'openhsi.metadata.build_section_widgets': ('metadata.html#build_section_widgets', 'openhsi/metadata.py'),
                                  'openhsi.metadata.build_variables_widgets': ( 'metadata.html#build_variables_widgets',
                                                                                'openhsi/metadata.py')},
            'openhsi.sensors': { 'openhsi.sensors.GPIOInterface': ('sensors.html#gpiointerface', 'openhsi/sensors.py'),
                                 'openhsi.sensors.GPIOInterface.__init__': ('sensors.html#gpiointerface.__init__', 'openhsi/sensors.py'),
                                 'openhsi.sensors.GPIOInterface.status': ('sensors.html#gpiointerface.status', 'openhsi/sensors.py'),
                                 'openhsi.sensors.MPInterface': ('sensors.html#mpinterface', 'openhsi/sensors.py'),
                                 'openhsi.sensors.MPInterface.__init__': ('sensors.html#mpinterface.__init__', 'openhsi/sensors.py'),
                                 'openhsi.sensors.MPInterface.status': ('sensors.html#mpinterface.status', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard': ('sensors.html#sensordashboard', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.__call__': ( 'sensors.html#sensordashboard.__call__',
                                                                               'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.__init__': ( 'sensors.html#sensordashboard.__init__',
                                                                               'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.clear_all': ( 'sensors.html#sensordashboard.clear_all',
                                                                                'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.close': ('sensors.html#sensordashboard.close', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.read': ('sensors.html#sensordashboard.read', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.run': ('sensors.html#sensordashboard.run', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorDashboard.update': ('sensors.html#sensordashboard.update', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorStream': ('sensors.html#sensorstream', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorStream.__init__': ('sensors.html#sensorstream.__init__', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorStream.clean_df': ('sensors.html#sensorstream.clean_df', 'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorStream.master_loop': ( 'sensors.html#sensorstream.master_loop',
                                                                               'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorStream.read_packet': ( 'sensors.html#sensorstream.read_packet',
                                                                               'openhsi/sensors.py'),
                                 'openhsi.sensors.SensorStream.save': ('sensors.html#sensorstream.save', 'openhsi/sensors.py'),
                                 'openhsi.sensors.clear_pps_cb': ('sensors.html#clear_pps_cb', 'openhsi/sensors.py'),
                                 'openhsi.sensors.collect_sim': ('sensors.html#collect_sim', 'openhsi/sensors.py'),
                                 'openhsi.sensors.decode_packet': ('sensors.html#decode_packet', 'openhsi/sensors.py'),
                                 'openhsi.sensors.interp2camera_times': ('sensors.html#interp2camera_times', 'openhsi/sensors.py'),
                                 'openhsi.sensors.set_pps_cb': ('sensors.html#set_pps_cb', 'openhsi/sensors.py')},
            'openhsi.shared': { 'openhsi.shared.SharedCircArrayBuffer': ('shared.html#sharedcircarraybuffer', 'openhsi/shared.py'),
                                'openhsi.shared.SharedCircArrayBuffer.__init__': ( 'shared.html#sharedcircarraybuffer.__init__',
                                                                                   'openhsi/shared.py'),
                                'openhsi.shared.SharedDataCube': ('shared.html#shareddatacube', 'openhsi/shared.py'),
                                'openhsi.shared.SharedDataCube.__init__': ('shared.html#shareddatacube.__init__', 'openhsi/shared.py'),
                                'openhsi.shared.SharedDataCube.__repr__': ('shared.html#shareddatacube.__repr__', 'openhsi/shared.py'),
                                'openhsi.shared.SharedDataCube.put': ('shared.html#shareddatacube.put', 'openhsi/shared.py'),
                                'openhsi.shared.SharedDataCube.save': ('shared.html#shareddatacube.save', 'openhsi/shared.py'),
                                'openhsi.shared.SharedDataCube.show': ('shared.html#shareddatacube.show', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI': ('shared.html#sharedopenhsi', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI.__close__': ('shared.html#sharedopenhsi.__close__', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI.__enter__': ('shared.html#sharedopenhsi.__enter__', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI.__exit__': ('shared.html#sharedopenhsi.__exit__', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI.__init__': ('shared.html#sharedopenhsi.__init__', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI.avgNimgs': ('shared.html#sharedopenhsi.avgnimgs', 'openhsi/shared.py'),
                                'openhsi.shared.SharedOpenHSI.collect': ('shared.html#sharedopenhsi.collect', 'openhsi/shared.py'),
                                'openhsi.shared.save_shared_datacube': ('shared.html#save_shared_datacube', 'openhsi/shared.py')},
            'openhsi.snr': { 'openhsi.snr.Widget_SNR': ('snr.html#widget_snr', 'openhsi/snr.py'),
                             'openhsi.snr.Widget_SNR.__init__': ('snr.html#widget_snr.__init__', 'openhsi/snr.py'),
                             'openhsi.snr.Widget_SNR.view': ('snr.html#widget_snr.view', 'openhsi/snr.py')},
            'openhsi.tutorial': {},
            'openhsi.tutorial.calibrate': {},
            'openhsi.tutorial.calibration_files': {},
            'openhsi.tutorial.quick_start': {}}}
